<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0"
         xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
         xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">

    <modelVersion>4.0.0</modelVersion>

    <groupId>com.xavier.flink</groupId>
    <artifactId>flink-quick-start</artifactId>
    <packaging>pom</packaging>
    <version>1.0</version>

    <modules>
        <module>flink-examples</module>
        <module>flink-1.11.2-tutorial</module>
    </modules>

    <properties>
        <project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
        <project.reporting.outputEncoding>UTF-8</project.reporting.outputEncoding>

        <java.version>1.8</java.version>
        <!-- Overwrite default values from parent pom.
        Intellij is (sometimes?) using those values to choose target language level
        and thus is changing back to java 1.6 on each maven re-import -->
        <maven.compiler.source>${java.version}</maven.compiler.source>
        <maven.compiler.target>${java.version}</maven.compiler.target>

        <!-- Default scala versions, must be overwritten by build profiles, so we set something invalid here -->
        <scala.version>2.12.12</scala.version>
        <scala.binary.version>2.12</scala.binary.version>

        <flink.version>1.10.0</flink.version>
        <flink.shaded.version>7.0</flink.shaded.version>

        <slf4j.version>1.7.15</slf4j.version>
        <log4j.version>1.2.17</log4j.version>
        <log4j.configuration>log4j-test.properties</log4j.configuration>

        <junit.version>4.13.1</junit.version>
        <mockito.version>2.21.0</mockito.version>
        <powermock.version>2.0.0-RC.4</powermock.version>

        <hadoop.version>2.4.1</hadoop.version>
        <metrics.version>3.1.5</metrics.version>
        <guava.version>18.0</guava.version>
        <akka.version>2.5.21</akka.version>
        <zookeeper.version>3.4.10</zookeeper.version>
        <curator.version>2.12.0</curator.version>
        <!--
            Hive 2.3.4 relies on Hadoop 2.7.2 and later versions.
            For Hadoop 2.7, the minor Hadoop version supported for flink-shaded-hadoop-2-uber is 2.7.5
        -->
        <hive.version>2.3.4</hive.version>
    </properties>

    <!-- this section defines the module versions that are used if nothing else is specified. -->
    <dependencyManagement>
        <!-- WARN:
            DO NOT put 	guava,
                        protobuf,
                        asm,
                        netty
                    here. It will overwrite Hadoop's guava dependency (even though we handle it
            separately in the flink-shaded-hadoop-2 dependency).
        -->
        <dependencies>

            <dependency>
                <groupId>org.apache.flink</groupId>
                <artifactId>flink-shaded-asm-6</artifactId>
                <version>6.2.1-${flink.shaded.version}</version>
            </dependency>

            <dependency>
                <groupId>org.apache.flink</groupId>
                <artifactId>flink-shaded-guava</artifactId>
                <version>18.0-${flink.shaded.version}</version>
            </dependency>

            <!-- This manages the 'javax.annotation' annotations (JSR305) -->
            <dependency>
                <groupId>com.google.code.findbugs</groupId>
                <artifactId>jsr305</artifactId>
                <version>1.3.9</version>
            </dependency>

            <dependency>
                <groupId>org.slf4j</groupId>
                <artifactId>slf4j-api</artifactId>
                <version>${slf4j.version}</version>
            </dependency>
            <dependency>
                <groupId>org.slf4j</groupId>
                <artifactId>slf4j-log4j12</artifactId>
                <version>${slf4j.version}</version>
            </dependency>
            <dependency>
                <groupId>log4j</groupId>
                <artifactId>log4j</artifactId>
                <version>${log4j.version}</version>
            </dependency>

            <dependency>
                <groupId>org.apache.commons</groupId>
                <artifactId>commons-lang3</artifactId>
                <version>3.3.2</version>
            </dependency>

            <!-- For dependency convergence -->
            <dependency>
                <groupId>junit</groupId>
                <artifactId>junit</artifactId>
                <version>${junit.version}</version>
            </dependency>

            <dependency>
                <groupId>commons-io</groupId>
                <artifactId>commons-io</artifactId>
                <version>2.4</version>
            </dependency>

            <!-- commons collections needs to be pinned to this critical security fix version -->
            <dependency>
                <groupId>commons-collections</groupId>
                <artifactId>commons-collections</artifactId>
                <version>3.2.2</version>
            </dependency>

            <dependency>
                <groupId>org.scala-lang</groupId>
                <artifactId>scala-library</artifactId>
                <version>${scala.version}</version>
            </dependency>
            <dependency>
                <groupId>org.scala-lang</groupId>
                <artifactId>scala-reflect</artifactId>
                <version>${scala.version}</version>
            </dependency>
            <dependency>
                <groupId>org.scala-lang</groupId>
                <artifactId>scala-compiler</artifactId>
                <version>${scala.version}</version>
            </dependency>
        </dependencies>
    </dependencyManagement>

    <dependencies>
        <!-- Root dependencies for all projects -->

        <!-- Logging API -->
        <dependency>
            <groupId>org.slf4j</groupId>
            <artifactId>slf4j-api</artifactId>
        </dependency>

        <!-- test dependencies -->

        <!-- tests will have log4j as the default logging framework available -->
        <dependency>
            <groupId>org.slf4j</groupId>
            <artifactId>slf4j-log4j12</artifactId>
            <type>jar</type>
            <scope>test</scope>
        </dependency>
        <dependency>
            <groupId>log4j</groupId>
            <artifactId>log4j</artifactId>
            <type>jar</type>
            <scope>test</scope>
        </dependency>

        <dependency>
            <groupId>junit</groupId>
            <artifactId>junit</artifactId>
            <type>jar</type>
            <scope>test</scope>
        </dependency>

        <dependency>
            <groupId>org.mockito</groupId>
            <artifactId>mockito-core</artifactId>
            <version>${mockito.version}</version>
            <type>jar</type>
            <scope>test</scope>
        </dependency>

        <dependency>
            <groupId>org.powermock</groupId>
            <artifactId>powermock-module-junit4</artifactId>
            <version>${powermock.version}</version>
            <type>jar</type>
            <scope>test</scope>
        </dependency>

        <dependency>
            <groupId>org.powermock</groupId>
            <artifactId>powermock-api-mockito2</artifactId>
            <version>${powermock.version}</version>
            <type>jar</type>
            <scope>test</scope>
            <exclusions>
                <exclusion>
                    <groupId>org.mockito</groupId>
                    <artifactId>mockito-core</artifactId>
                </exclusion>
            </exclusions>
        </dependency>
    </dependencies>

    <build>
        <pluginManagement>
            <plugins>
                <plugin>
                    <groupId>org.apache.maven.plugins</groupId>
                    <artifactId>maven-compiler-plugin</artifactId>
                    <version>3.8.0</version>
                    <configuration>
                        <source>${java.version}</source>
                        <target>${java.version}</target>
                        <!-- The semantics of this option are reversed, see MCOMPILER-209. -->
                        <useIncrementalCompilation>false</useIncrementalCompilation>
                        <compilerArgs>
                            <!-- Prevents recompilation due to missing package-info.class, see MCOMPILER-205 -->
                            <arg>-Xpkginfo:always</arg>
                        </compilerArgs>
                    </configuration>
                </plugin>
            </plugins>
        </pluginManagement>
    </build>
</project>
